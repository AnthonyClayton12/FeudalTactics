import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: "java"

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = [ "src/main/java" ]
sourceSets.test.java.srcDirs = [ "src/test/java" ]
sourceSets.main.resources.srcDirs = [ "resources/", "$buildDir/generated/resources" ]

eclipse.project.name = appName + "-core"

processResources {
	from "$sourceSets.main.resources.srcDirs"
	filter(ReplaceTokens, tokens: [version: project.version])
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

	test {
	    useJUnitPlatform()
	}

// build license info text file
	def license_texts = ''
	// read prefix text
	license_texts += file('../dependency_licenses/licenses_pre.txt').text
	// iterate directories containing the dependency licenses
	def base_dir = file("../dependency_licenses")
	fileTree(dir: "../dependency_licenses").visit { FileVisitDetails dirDetails -> 
		if (dirDetails.directory) {
			license_texts += "\n" + dirDetails.file.name
			license_texts += "\n" + "-".multiply(dirDetails.file.name.length() * 1.2)
			fileTree(dir: dirDetails.file.path).visit { FileVisitDetails fileDetails -> 
				license_texts += "\n\n" + fileDetails.file.name
				license_texts += "\n" + fileDetails.file.text
			}
		}
	}
	// write the result
	mkdir("$buildDir/generated/resources")
	new File("$buildDir/generated/resources/licenses.txt").text = license_texts